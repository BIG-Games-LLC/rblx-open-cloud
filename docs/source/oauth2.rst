OAuth2
=============================

.. currentmodule:: rblx-open-cloud

.. class:: OAuth2App(id, secret, redirect_uri, openid_certs_cache_seconds=3600)

    Represents an OAuth2 app. It is used to exchange codes, refresh tokens, and access the API for authenticated users.

    .. versionadded:: 1.3

    :param int id: The app's client ID.
    :param str secret: The app's client secret.
    :param str redirect_uri: The redirect URI that is being used for authorization. If you need to use multiple, you must make seperate :class:`rblx-open-cloud.OAuth2` objects.
    :param int openid_certs_cache_seconds: The number of seconds to cache the openid certs. You can ignore this if you don't know what it does.

    .. attribute:: id 

        The app's client ID

        :type: int
      
    .. attribute:: redirect_uri 

        The app's redirect uri.

        :type: str

    .. attribute:: openid_certs_cache_seconds

        The number of seconds to cache the openid certs.

        :type: int

    .. method:: generate_uri(scope, state=None, generate_code=True)

        Creates an authorization uri with the client information prefilled.

        :param Union[str, list[str]] scope: A string, or list of strings specifying the scopes for authorization. For example ``['openid', 'profile']``
        :param str state: A string that will be returned on the otherside of authorization. It isn't required, but is recommend for security.
        :param bool generate_code: Wether to generate a code on return. Defaults to ``True``.
        :param Optional[str] code_verifier: The code verifier generated using :meth:`rblx-open-cloud.OAuth2App.generate_code_verifier`

        :returns: str

    .. method:: generate_code_verifier(length=128)

        Generates a code verifier which can be provided :meth:`rblx-open-cloud.OAuth2App.generate_uri` and :meth:`rblx-open-cloud.OAuth2App.exchange_code` to add extra security to the OAuth2 flow.

        If a code verifier is used, it must be provided to both methods, and it should also be unique.

        .. versionadded:: 1.4

        :param Optional[int] length: How long the code verifier should be.
        :returns: str

    .. method:: from_access_token_string(access_token)

        Creates an :class:`rblx-open-cloud.PartialAccessToken` from an access token string, fairly useless due to these tokens expiring after 15 minutes.

        It is also advised the refresh token instead of the access token, and refresh the token each time you need to access information instead of the access_token to improve security.

        :param str access_token: The access token string.

        :returns: :class:`rblx-open-cloud.PartialAccessToken`
         
    .. method:: exchange_code(code, code_verifier=None)

        Creates an :class:`rblx-open-cloud.AccessToken` from an authorization code returned from Roblox.

        :param str code: The code from the authorization server.
        :param Optional[str] code_verifier: the string for this OAuth2 flow generated by :meth:`rblx-open-cloud.OAuth2App.generate_code_verifier`.

        :returns: :class:`rblx-open-cloud.AccessToken`
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.InvalidCode: The authorization is not valid, or has already been exchanged.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

    .. method:: refresh_token(refresh_token)

        Creates an :class:`rblx-open-cloud.AccessToken` from a refresh token. The new access token will have a different refresh token, and you must store the new refresh token.

        :param str refresh_token: The refresh token to refresh.

        :returns: :class:`rblx-open-cloud.AccessToken`
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.InvalidCode: The authorization is not valid, or has already been exchanged.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

    .. method:: revoke_token(token)

        Revokes the authorization for a given access token or refresh token string.

        :param str token: The refresh token to refresh.

        :returns: None
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

        .. warning::

            Revoking an access token or refresh token will revoke it's token pair. You should only revoke a token when you're completely done with it.

.. class:: AccessToken

    Represents access via OAuth2 consent. It allows access to all resources authorized by the user.

    .. warning::

        This class is not designed to be created by users. It is returned by :meth:`OAuth2App.exchange_code` and :meth:`OAuth2App.refresh_token`.

    .. attribute:: app 

        :type: rblx-open-cloud.OAuth2App
    
    .. attribute:: token 

        The access token string. It can be stored in a database, and then turned back into a usable object using :meth:`OAuth2App.from_access_token_string`.

        However, due to the short life span of an access token, and to improve security, it is recommend to only store the refresh token, and use :meth:`OAuth2App.refresh_token` instead.

        :type: str
    
    .. attribute:: refresh_token 

        The authorization's refresh token. It can be converted to a brand new access token when the old access token expires after 15 minutes using :meth:`OAuth2App.refresh_token`.

        :type: str
    
    .. attribute:: scope 

        A list of authorized scopes.

        :type: list[str]
    
    .. attribute:: expires_at 

        The estimated timestamp the access token will expire at.

        :type: datetime.datetime
    
    .. attribute:: user 

        The user who is authorized the application. In some rare occasions, this may be None even though the ``openid`` and ``profile`` scopes were provided. If it is ``None`` you should try :meth:`AccessToken.fetch_userinfo`.

        :type: Optional[rblx-open-cloud.User]
   
    .. method:: fetch_userinfo()

        Returns a :class:`rblx-open-cloud.User` object for this authorization. You can use this object to directly access user resources (like uploading files), if it was authorized.

        :returns: Iterable[:class:`rblx-open-cloud.User`]
        :raises rblx-open-cloud.InsufficientScope: The ``openid`` and/or ``profile`` scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.
   
    .. method:: fetch_resources()

        Fetches the authorized accounts (users and groups), and experiences.

        :returns: Iterable[:class:`rblx-open-cloud.Resources`]
        :raises rblx-open-cloud.InsufficientScope: The required scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.
   
    .. method:: fetch_token_info()

        Fetches information the token such as the user's id, the authorized scope, and it's expiry time.

        :returns: Iterable[:class:`rblx-open-cloud.AccessTokenInfo`]
        :raises rblx-open-cloud.InsufficientScope: The required scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

    .. method:: revoke(token)

        Shortcut to revoke the access token.

        :returns: None
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

        .. warning::

            Revoking am access token will revoke it's refresh token pair. You should only revoke a token when you're completely done with it.

    .. method:: revoke_refresh_token(token)

        Shortcut to revoke the refresh token.

        :returns: None
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

        .. warning::

            Revoking a refresh token will revoke it's access token pair. You should only revoke a token when you're completely done with it.

.. class:: PartialAccessToken

    Represents a partial access via OAuth2 consent. It allows access to all resources authorized by the user, but not other information like the refresh token.

    .. warning::

        This class is not designed to be created by users. It is returned by :meth:`OAuth2App.from_access_token_string`.

    .. attribute:: app 

        :type: rblx-open-cloud.OAuth2App
    
    .. attribute:: token 

        The access token string. It can be stored in a database, and then turned back into a usable object using :meth:`OAuth2.from_access_token_string`.

        However, due to the short life span of an access token, and to improve security, it is recommend to only store the refresh token, and use :meth:`OAuth2.refresh_token` instead.

        :type: Union[datetime.datetime, None]
   
    .. method:: fetch_userinfo()

        Returns a :class:`rblx-open-cloud.User` object for this authorization. You can use this object to directly access user resources (like uploading files), if it was authorized.

        :returns: Iterable[:class:`rblx-open-cloud.User`]
        :raises rblx-open-cloud.InsufficientScope: The ``openid`` and/or ``profile`` scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.
   
    .. method:: fetch_resources()

        Fetches the authorized accounts (users and groups), and experiences.

        :returns: Iterable[:class:`rblx-open-cloud.Resources`]
        :raises rblx-open-cloud.InsufficientScope: The required scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.
   
    .. method:: fetch_token_info()

        Fetches information the token such as the user's id, the authorized scope, and it's expiry time.

        :returns: Iterable[:class:`rblx-open-cloud.AccessTokenInfo`]
        :raises rblx-open-cloud.InsufficientScope: The required scopes weren't authorized.
        :raises rblx-open-cloud.InvalidKey: This access token is invalid, expired or has been revoked.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

    .. method:: revoke(token)

        Shortcut to revoke the access token.

        :returns: None
        :raises rblx-open-cloud.InvalidKey: The client's ID, secret or redirect uri is invalid.
        :raises rblx-open-cloud.ServiceUnavailable: Roblox's servers are currently experiencing downtime.
        :raises rblx-open-cloud.rblx_opencloudException: Roblox's response was unexpected.

        .. warning::

            Revoking am access token will revoke it's refresh token pair. You should only revoke a token when you're completely done with it.

.. class:: Resources

    Object that contains all the authorized objects users, groups, and experiences.

    .. warning::

        This class is not designed to be created by users. It is returned by :meth:`AccessToken.fetch_resources` and :meth:`PartialAccessToken.fetch_resources`.

    .. attribute:: experiences

        A list of experiences authorized for the experience scopes.

        :type: list[rblx-open-cloud.Experience]
    
    .. attribute:: accounts

        A list of accounts (users and groups) authorized for the account scopes.

        :type: list[Union[rblx-open-cloud.User, rblx-open-cloud.Group]]

.. class:: AccessTokenInfo

    Object that contains information about a access token. 

    .. warning::

        This class is not designed to be created by users. It is returned by :meth:`AccessToken.fetch_token_info` and :meth:`PartialAccessToken.fetch_token_info`.

    .. attribute:: active

        Wether the token is still active.

        :type: bool

    .. attribute:: id

        A special string, unique for every authorization and user.

        :type: str

    .. attribute:: client_id

        The App's client ID.

        :type: int

    .. attribute:: user_id

        The authorizing user's ID.

        :type: int

    .. attribute:: scope

        The list of authorized scopes.

        :type: list[str]

    .. attribute:: expires_at

        The timestamp the access token expires at.

        :type: datetime.datetime

    .. attribute:: issued_at

        The timestamp the access token was issued at.

        :type: datetime.datetime